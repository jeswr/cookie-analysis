<!DOCTYPE html><html lang="en" dir="ltr"><head><meta charset="utf-8"><meta name="generator" content="ReSpec 24.7.0"><meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"><style>/* --- ISSUES/NOTES --- */
.issue-label {
    text-transform: initial;
}

.warning > p:first-child { margin-top: 0 }
.warning {
    padding: .5em;
    border-left-width: .5em;
    border-left-style: solid;
}
span.warning { padding: .1em .5em .15em; }

.issue.closed span.issue-number {
    text-decoration: line-through;
}

.warning {
    border-color: #f11;
    border-width: .2em;
    border-style: solid;
    background: #fbe9e9;
}

.warning-title:before{
    content: "⚠"; /*U+26A0 WARNING SIGN*/
    font-size: 3em;
    float: left;
    height: 100%;
    padding-right: .3em;
    vertical-align: top;
    margin-top: -0.5em;
}

li.task-list-item {
    list-style: none;
}

input.task-list-item-checkbox {
    margin: 0 0.35em 0.25em -1.6em;
    vertical-align: middle;
}

.issue a.respec-gh-label {
  padding: 5px;
  margin: 0 2px 0 2px;
  font-size: 10px;
  text-transform: none;
  text-decoration: none;
  font-weight: bold;
  border-radius: 4px;
  position: relative;
  bottom: 2px;
  border: none;
}

.issue a.respec-label-dark {
  color: #fff;
  background-color: #000;
}

.issue a.respec-label-light {
  color: #000;
  background-color: #fff;
}
</style><style>/* --- Best Practices ---  */

span.practicelab {
  display: block;
  color: #005A9C;
  margin-bottom: 1em;
}

span.practicetitle {
  color: #005A9C;
  text-decoration: underline;
  margin-bottom: 1em;
}

p.practicedesc {
  padding: 2em;
  border-left-width: 0.5em;
  border-left-style: solid;
  border-color: #8CCBF2;
  background: 
  rgb(241, 246, 253);
}

.practicebox {

}

@media (max-width: 767px) {
  span.practicetitle {
    display: block;
  }
}
</style>
    <title>Mitigating Browser Fingerprinting in Web Specifications</title>
    
    <style id="respec-mainstyle">/*****************************************************************
 * ReSpec 3 CSS
 * Robin Berjon - http://berjon.com/
 *****************************************************************/

/* Override code highlighter background */
.hljs {
  background: transparent !important;
}

/* --- INLINES --- */
h1 abbr,
h2 abbr,
h3 abbr,
h4 abbr,
h5 abbr,
h6 abbr,
a abbr {
  border: none;
}

dfn {
  font-weight: bold;
}

a.internalDFN {
  color: inherit;
  border-bottom: 1px solid #99c;
  text-decoration: none;
}

a.externalDFN {
  color: inherit;
  border-bottom: 1px dotted #ccc;
  text-decoration: none;
}

a.bibref {
  text-decoration: none;
}

#references :target {
  background: #eaf3ff;
}

cite .bibref {
  font-style: normal;
}

code {
  color: #c83500;
}

th code {
  color: inherit;
}

/* --- TOC --- */

.toc a,
.tof a {
  text-decoration: none;
}

a .secno,
a .figno {
  color: #000;
}

ul.tof,
ol.tof {
  list-style: none outside none;
}

.caption {
  margin-top: 0.5em;
  font-style: italic;
}

/* --- TABLE --- */

table.simple {
  border-spacing: 0;
  border-collapse: collapse;
  border-bottom: 3px solid #005a9c;
}

.simple th {
  background: #005a9c;
  color: #fff;
  padding: 3px 5px;
  text-align: left;
}

.simple th[scope="row"] {
  background: inherit;
  color: inherit;
  border-top: 1px solid #ddd;
}

.simple td {
  padding: 3px 10px;
  border-top: 1px solid #ddd;
}

.simple tr:nth-child(even) {
  background: #f0f6ff;
}

/* --- DL --- */

.section dd>p:first-child {
  margin-top: 0;
}

.section dd>p:last-child {
  margin-bottom: 0;
}

.section dd {
  margin-bottom: 1em;
}

.section dl.attrs dd,
.section dl.eldef dd {
  margin-bottom: 0;
}

#issue-summary>ul,
.respec-dfn-list {
  column-count: 2;
}

#issue-summary li,
.respec-dfn-list li {
  list-style: none;
}

details.respec-tests-details {
  margin-left: 1em;
  display: inline-block;
  vertical-align: top;
}

details.respec-tests-details>* {
  padding-right: 2em;
}

details.respec-tests-details[open] {
  z-index: 999999;
  position: absolute;
  border: thin solid #cad3e2;
  border-radius: 0.3em;
  background-color: white;
  padding-bottom: 0.5em;
}

details.respec-tests-details[open]>summary {
  border-bottom: thin solid #cad3e2;
  padding-left: 1em;
  margin-bottom: 1em;
  line-height: 2em;
}

details.respec-tests-details>ul {
  width: 100%;
  margin-top: -0.3em;
}

details.respec-tests-details>li {
  padding-left: 1em;
}

a[href].self-link:hover {
  opacity: 1;
  text-decoration: none;
  background-color: transparent;
}

h2,
h3,
h4,
h5,
h6 {
  position: relative;
}

aside.example .marker > a.self-link {
  color: inherit;
}

h2>a.self-link,
h3>a.self-link,
h4>a.self-link,
h5>a.self-link,
h6>a.self-link {
  border: none;
  color: inherit;
  font-size: 83%;
  height: 2em;
  left: -1.6em;
  opacity: .5;
  position: absolute;
  text-align: center;
  text-decoration: none;
  top: 0;
  transition: opacity .2s;
  width: 2em;
}

h2>a.self-link::before,
h3>a.self-link::before,
h4>a.self-link::before,
h5>a.self-link::before,
h6>a.self-link::before {
  content: "§";
  display: block;
}

@media (max-width: 767px) {
  dd {
    margin-left: 0;
  }

  /* Don't position self-link in headings off-screen */
  h2>a.self-link,
  h3>a.self-link,
  h4>a.self-link,
  h5>a.self-link,
  h6>a.self-link {
    left: auto;
    top: auto;
  }
}

@media print {
  .removeOnSave {
    display: none;
  }
}
</style>
    
      <style type="text/css" media="screen">
        img.fingerprint {
          float: left; 
          margin-left: -25px;
        }
        ul.practicedesc {
            margin-top: -2em;
            padding-top: .5em;
        }
      </style>
  <link rel="canonical" href="https://www.w3.org/TR/fingerprinting-guidance/"><style>/*

github.com style (c) Vasily Polovnyov <vast@whiteants.net>

*/

.hljs {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  color: #333;
  background: #f8f8f8;
}

.hljs-comment,
.hljs-quote {
  color: #998;
  font-style: italic;
}

.hljs-keyword,
.hljs-selector-tag,
.hljs-subst {
  color: #333;
  font-weight: bold;
}

.hljs-number,
.hljs-literal,
.hljs-variable,
.hljs-template-variable,
.hljs-tag .hljs-attr {
  color: #008080;
}

.hljs-string,
.hljs-doctag {
  color: #d14;
}

.hljs-title,
.hljs-section,
.hljs-selector-id {
  color: #900;
  font-weight: bold;
}

.hljs-subst {
  font-weight: normal;
}

.hljs-type,
.hljs-class .hljs-title {
  color: #458;
  font-weight: bold;
}

.hljs-tag,
.hljs-name,
.hljs-attribute {
  color: #000080;
  font-weight: normal;
}

.hljs-regexp,
.hljs-link {
  color: #009926;
}

.hljs-symbol,
.hljs-bullet {
  color: #990073;
}

.hljs-built_in,
.hljs-builtin-name {
  color: #0086b3;
}

.hljs-meta {
  color: #999;
  font-weight: bold;
}

.hljs-deletion {
  background: #fdd;
}

.hljs-addition {
  background: #dfd;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: bold;
}
</style><script id="initialUserConfig" type="application/json">{
  "specStatus": "IG-NOTE",
  "noRecTrack": true,
  "publishDate": "2019-03-28",
  "shortName": "fingerprinting-guidance",
  "previousPublishDate": "2015-11-24",
  "previousMaturity": "IG-NOTE",
  "edDraftURI": "https://w3c.github.io/fingerprinting-guidance/",
  "editors": [
    {
      "name": "Nick Doty",
      "url": "https://npdoty.name/"
    }
  ],
  "otherLinks": [
    {
      "key": "Version history",
      "data": [
        {
          "value": "GitHub commit history",
          "href": "https://github.com/w3c/fingerprinting-guidance/commits/gh-pages"
        }
      ]
    },
    {
      "key": "Issues list",
      "data": [
        {
          "value": "GitHub issues list",
          "href": "https://github.com/w3c/fingerprinting-guidance/issues"
        }
      ]
    }
  ],
  "wg": "Privacy Interest Group",
  "wgURI": "https://www.w3.org/Privacy/",
  "wgPublicList": "public-privacy",
  "wgPatentURI": "",
  "charterDisclosureURI": "https://www.w3.org/2011/07/privacy-ig-charter.html",
  "localBiblio": {
    "EVERCOOKIE": {
      "authors": [
        "Samy Kamkar"
      ],
      "href": "https://samy.pl/evercookie/",
      "title": "evercookie - virtually irrevocable persistent cookies",
      "date": "September 2010",
      "id": "evercookie"
    },
    "NDSS-FINGERPRINTING": {
      "authors": [
        "Ting-Fang Yen",
        "Yinglian Xie",
        "Fang Yu",
        "Roger Peng Yu",
        "Martin Abadi"
      ],
      "href": "https://www.microsoft.com/en-us/research/publication/host-fingerprinting-and-tracking-on-the-webprivacy-and-security-implications/",
      "title": "Host Fingerprinting and Tracking on the Web: Privacy and Security Implications",
      "date": "February 2012",
      "publisher": "In Proceedings of the Network and Distributed System Security Symposium (NDSS)",
      "id": "ndss-fingerprinting"
    },
    "RFC6973": {
      "authors": [
        "A. Cooper",
        "H. Tschofenig",
        "B. Aboba",
        "J. Peterson",
        "J. Morris",
        "M. Hansen",
        "R. Smith"
      ],
      "href": "https://www.rfc-editor.org/rfc/rfc6973.txt",
      "title": "Privacy Considerations for Internet Protocols",
      "date": "July 2013",
      "status": "RFC",
      "publisher": "IETF",
      "id": "rfc6973"
    },
    "WEBSTORAGE-user-tracking": {
      "href": "https://www.w3.org/TR/2013/REC-webstorage-20130730/#user-tracking",
      "title": "Web Storage > Privacy > User tracking",
      "date": "July 2013",
      "authors": [
        "Ian Hickson"
      ],
      "status": "Rec",
      "publisher": "W3C",
      "id": "webstorage-user-tracking"
    },
    "TAG-UNSANCTIONED": {
      "href": "https://w3ctag.github.io/unsanctioned-tracking/",
      "title": "Unsanctioned Web Tracking",
      "date": "17 July 2015",
      "authors": [
        "Mark Nottingham"
      ],
      "publisher": "W3C Technical Architecture Group",
      "id": "tag-unsanctioned"
    },
    "HIDING-CROWD": {
      "href": "https://hal.inria.fr/hal-01718234v2",
      "title": "Hiding in the Crowd: an Analysis of the Effectiveness of Browser Fingerprinting at Large Scale",
      "date": "April 2018",
      "authors": [
        "Alejandro Gómez-Boix",
        "Pierre Laperdrix",
        "Benoit Baudry"
      ],
      "publisher": "WWW2018 - TheWebConf2018: 27th International World Wide Web Conference",
      "id": "hiding-crowd"
    },
    "WPM-MILLION": {
      "href": "https://webtransparency.cs.princeton.edu/webcensus/",
      "authors": [
        "Steven Englehardt",
        "Arvind Narayanan"
      ],
      "date": "May 2016",
      "title": "Online tracking: A 1-million-site measurement and analysis",
      "id": "wpm-million"
    },
    "FLASHCOOKIES": {
      "href": "https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1446862",
      "date": "10 August 2009",
      "authors": [
        "Ashkan Soltani",
        "Shannon Canty",
        "Quentin Mayo",
        "Lauren Thomas",
        "Chris Jay Hoofnagle"
      ],
      "title": "Flash Cookies and Privacy",
      "id": "flashcookies"
    },
    "FLASHCOOKIES-2": {
      "href": "https://ptolemy.berkeley.edu/projects/truststc/education/reu/11/Posters/AyensonMWambachDpaper.pdf",
      "authors": [
        "Mika Ayenson",
        "Dietrich Wambach",
        "Ashkan Soltani",
        "Nathan Good",
        "Chris Hoofnagle"
      ],
      "title": "Flash cookies and privacy II: Now with HTML5 and ETag respawning",
      "id": "flashcookies-2"
    },
    "TOR-DESIGN": {
      "title": "The Design and Implementation of the Tor Browser",
      "href": "https://www.torproject.org/projects/torbrowser/design/",
      "date": "15 June 2018",
      "authors": [
        "Mike Perry",
        "Erinn Clark",
        "Steven Murdoch",
        "Georg Koppen"
      ],
      "id": "tor-design"
    },
    "TAG-MINIMIZATION": {
      "href": "https://www.w3.org/2001/tag/doc/APIMinimization",
      "date": "12 September 2011",
      "authors": [
        "Daniel Appelquist"
      ],
      "publisher": "W3C Technical Architecture Group",
      "title": "Data Minimization in Web APIs",
      "id": "tag-minimization"
    },
    "LEAKING-BATTERY": {
      "href": "https://eprint.iacr.org/2015/616.pdf",
      "date": "2015",
      "authors": [
        "Łukasz Olejnik",
        "Gunes Acar",
        "Claude Castelluccia",
        "Claudia Diaz"
      ],
      "title": "The leaking battery: A privacy analysis of the HTML5 Battery Status API",
      "id": "leaking-battery"
    },
    "BEAUTY-BEAST": {
      "authors": [
        "Pierre Laperdrix",
        "Walter Rudametkin",
        "Benoit Baudry"
      ],
      "title": "Beauty and the Beast: Diverting modern web browsers to build unique browser fingerprints",
      "publisher": "IEEE Symposium on Security and Privacy (S&P 2016)",
      "date": "May 2016",
      "href": "https://hal.inria.fr/hal-01285470v2/",
      "id": "beauty-beast"
    },
    "httpbis-client-hints": {
      "href": "https://httpwg.org/http-extensions/client-hints.html",
      "title": "HTTP Client Hints",
      "authors": [
        "Ilya Grigorik"
      ],
      "date": "January 2019",
      "publisher": "HTTP Working Group",
      "id": "httpbis-client-hints"
    },
    "security-privacy-questionnaire-tag": {
      "href": "https://w3ctag.github.io/security-questionnaire/",
      "authors": [
        "Lukasz Olejnik",
        "Jason Novak"
      ],
      "date": "December 2018",
      "title": "Self-Review Questionnaire: Security and Privacy",
      "publisher": "W3C Technical Architecture Group",
      "id": "security-privacy-questionnaire-tag"
    }
  },
  "publishISODate": "2019-03-28T00:00:00.000Z",
  "generatedSubtitle": "Interest Group Note 28 March 2019"
}</script><link rel="stylesheet" href="https://www.w3.org/StyleSheets/TR/2016/W3C-IG-NOTE"></head>
  <body class="h-entry informative"><div class="head">
      <a href="https://www.w3.org/" class="logo"><img alt="W3C" width="72" height="48" src="https://www.w3.org/StyleSheets/TR/2016/logos/W3C"></a> <h1 id="title" class="title p-name">Mitigating Browser Fingerprinting in Web Specifications</h1>
      
      <h2>
        <abbr title="World Wide Web Consortium">W3C</abbr> Interest Group Note
        <time class="dt-published" datetime="2019-03-28">28 March 2019</time>
      </h2>
      <dl>
        <dt>This version:</dt><dd>
                <a class="u-url" href="https://www.w3.org/TR/2019/NOTE-fingerprinting-guidance-20190328/">https://www.w3.org/TR/2019/NOTE-fingerprinting-guidance-20190328/</a>
              </dd><dt>Latest published version:</dt><dd>
                <a href="https://www.w3.org/TR/fingerprinting-guidance/">https://www.w3.org/TR/fingerprinting-guidance/</a>
              </dd>
        <dt>Latest editor's draft:</dt><dd><a href="https://w3c.github.io/fingerprinting-guidance/">https://w3c.github.io/fingerprinting-guidance/</a></dd>
        
        
        
        
        <dt>Previous version:</dt><dd><a href="https://www.w3.org/TR/2015/NOTE-fingerprinting-guidance-20151124/">https://www.w3.org/TR/2015/NOTE-fingerprinting-guidance-20151124/</a></dd>
        
        <dt>Editor:</dt>
        <dd class="p-author h-card vcard"><a class="u-url url p-name fn" href="https://npdoty.name/">Nick Doty</a></dd>
        
        
        <dt>Version history:</dt><dd>
      <a href="https://github.com/w3c/fingerprinting-guidance/commits/gh-pages">GitHub commit history</a>
    </dd><dt>Issues list:</dt><dd>
      <a href="https://github.com/w3c/fingerprinting-guidance/issues">GitHub issues list</a>
    </dd>
      </dl>
      
      
      
      <p class="copyright">
      <a href="https://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a>
      ©
      2019
      
      <a href="https://www.w3.org/"><abbr title="World Wide Web Consortium">W3C</abbr></a><sup>®</sup> (<a href="https://www.csail.mit.edu/"><abbr title="Massachusetts Institute of Technology">MIT</abbr></a>,
      <a href="https://www.ercim.eu/"><abbr title="European Research Consortium for Informatics and Mathematics">ERCIM</abbr></a>, <a href="https://www.keio.ac.jp/">Keio</a>,
      <a href="https://ev.buaa.edu.cn/">Beihang</a>). 
      <abbr title="World Wide Web Consortium">W3C</abbr> <a href="https://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability</a>,
      <a href="https://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademark</a> and <a rel="license" href="https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document">permissive document license</a> rules
      apply.
    </p>
      <hr title="Separator for header">
    </div>
    <section id="abstract" class="introductory"><h2>Abstract</h2>
      Exposure of settings and characteristics of browsers can harm user privacy by allowing for browser fingerprinting. This document defines different types of fingerprinting, considers distinct levels of mitigation for the related privacy risks and provides guidance for Web specification authors on how to balance these concerns when designing new Web features.
    </section>
    <section id="sotd" class="introductory"><h2>Status of This Document</h2><p><em>This section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current <abbr title="World Wide Web Consortium">W3C</abbr> publications and the latest revision of this technical report can be found in the <a href="https://www.w3.org/TR/"><abbr title="World Wide Web Consortium">W3C</abbr> technical reports index</a> at https://www.w3.org/TR/.</em>
      </p><p>

            This document is an Interest Group Note providing best practices to Web specification
            authors on mitigating the privacy impacts of browser fingerprinting.  It was developed
            by the <a href="https://www.w3.org/Privacy/"><abbr title="World Wide Web Consortium">W3C</abbr> Privacy Interest Group (PING)</a> 
            in collaboration with
	    the <a href="https://www.w3.org/2001/tag/"><abbr title="World Wide Web Consortium">W3C</abbr> Technical Architecture Group</a> (<abbr title="Technical Architecture Group">TAG</abbr>).
            Since the last publication the list of best practices has been expanded and made
            more specific, guidance has been provided on how to evaluate the severity of fingerprinting
            surface, and additional references and examples have been provided. Constructive input of all
            kinds is welcome. Send comments to the <a href="mailto:public-privacy@w3.org">PING mailing list</a>
	    or <a href="https://github.com/w3c/fingerprinting-guidance/issues">file issues in GitHub</a>.

      </p><p data-deliverer="52497">
      Publication as an Interest Group Note does not imply endorsement by the
      W3C Membership. The document may be updated, replaced or
      obsoleted by other documents at any time.
    </p><p>
            The disclosure obligations of the Participants of this group are
            described in the
            <a href="https://www.w3.org/2011/07/privacy-ig-charter.html">charter</a>.
          
    </p><p>
                  This document is governed by the
                  <a id="w3c_process_revision" href="https://www.w3.org/2019/Process-20190301/">1 March 2019 <abbr title="World Wide Web Consortium">W3C</abbr> Process Document</a>.
                </p></section><nav id="toc"><h2 class="introductory" id="table-of-contents">Table of Contents</h2><ol class="toc"><li class="tocline"><a class="tocxref" href="#browser-fingerprinting"><span class="secno">1. </span>Browser fingerprinting</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#what-is-fingerprinting"><span class="secno">1.1 </span>What is fingerprinting?</a></li><li class="tocline"><a class="tocxref" href="#privacy_threat_models"><span class="secno">1.2 </span>Privacy impacts and threat models</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#identify-a-user"><span class="secno">1.2.1 </span>Identify a user</a></li><li class="tocline"><a class="tocxref" href="#correlation-of-browsing-activity"><span class="secno">1.2.2 </span>Correlation of browsing activity</a></li><li class="tocline"><a class="tocxref" href="#tracking-without-transparency-or-user-control"><span class="secno">1.2.3 </span>Tracking without transparency or user control</a></li></ol></li><li class="tocline"><a class="tocxref" href="#what-can-we-do-about-it"><span class="secno">1.3 </span>What can we do about it?</a></li></ol></li><li class="tocline"><a class="tocxref" href="#bp-summary"><span class="secno">2. </span>Best Practices Summary</a></li><li class="tocline"><a class="tocxref" href="#types-of-fingerprinting"><span class="secno">3. </span>Types of fingerprinting</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#passive-0"><span class="secno">3.1 </span>Passive</a></li><li class="tocline"><a class="tocxref" href="#active-0"><span class="secno">3.2 </span>Active</a></li><li class="tocline"><a class="tocxref" href="#cookie-like"><span class="secno">3.3 </span>Cookie-like</a></li></ol></li><li class="tocline"><a class="tocxref" href="#feasibility"><span class="secno">4. </span>Feasibility</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#fingerprinting-mitigation-levels-of-success"><span class="secno">4.1 </span>Fingerprinting mitigation levels of success</a></li><li class="tocline"><a class="tocxref" href="#feasible-goals-for-specification-authors"><span class="secno">4.2 </span>Feasible goals for specification authors</a></li></ol></li><li class="tocline"><a class="tocxref" href="#identifying-fingerprinting-surface-and-evaluating-severity"><span class="secno">5. </span>Identifying fingerprinting surface and evaluating severity</a></li><li class="tocline"><a class="tocxref" href="#mitigations"><span class="secno">6. </span>Mitigations</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#weighing_increased_fingerprinting_surface"><span class="secno">6.1 </span>Weighing increased fingerprinting surface</a></li><li class="tocline"><a class="tocxref" href="#standardization"><span class="secno">6.2 </span>Standardization</a></li><li class="tocline"><a class="tocxref" href="#detectability"><span class="secno">6.3 </span>Detectability</a></li><li class="tocline"><a class="tocxref" href="#clearing-all-local-state"><span class="secno">6.4 </span>Clearing all local state</a></li><li class="tocline"><a class="tocxref" href="#do-not-track"><span class="secno">6.5 </span>Do Not Track</a></li></ol></li><li class="tocline"><a class="tocxref" href="#research"><span class="secno">A. </span>Research</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#browser-vendor-documentation"><span class="secno">A.1 </span>Browser vendor documentation</a></li><li class="tocline"><a class="tocxref" href="#academic-research"><span class="secno">A.2 </span>Academic research</a></li><li class="tocline"><a class="tocxref" href="#testing"><span class="secno">A.3 </span>Testing</a></li></ol></li><li class="tocline"><a class="tocxref" href="#acknowledgements"><span class="secno">B. </span>Acknowledgements</a></li><li class="tocline"><a class="tocxref" href="#references"><span class="secno">C. </span>References</a><ol class="toc"><li class="tocline"><a class="tocxref" href="#informative-references"><span class="secno">C.1 </span>Informative references</a></li></ol></li></ol></nav>
    <section id="browser-fingerprinting">
      <!--OddPage--><h2 id="x1-browser-fingerprinting"><span class="secno">1. </span>Browser fingerprinting<a class="self-link" aria-label="§" href="#browser-fingerprinting"></a></h2>
        <section id="what-is-fingerprinting">
        <h3 id="x1-1-what-is-fingerprinting"><span class="secno">1.1 </span>What is fingerprinting?<a class="self-link" aria-label="§" href="#what-is-fingerprinting"></a></h3>
        <p>In short, <dfn id="dfn-browser-fingerprinting" data-export="" data-dfn-type="dfn">browser fingerprinting</dfn> is the capability of a site to identify or re-identify a visiting user, user agent or device via configuration settings or other observable characteristics.</p>
        <p>A similar definition is provided by [<cite><a class="bibref" href="#bib-rfc6973">RFC6973</a></cite>]. A more detailed list of types of fingerprinting is included below. This document does not attempt to catalog all features currently used or usable for browser fingerprinting; however, <a href="#research" class="sec-ref"><span class="secno">§&nbsp;A.</span> <span class="sec-title">Research</span></a> provides links to browser vendor pages and academic findings.</p>
        </section>
        <section id="privacy_threat_models">
        <h3 id="x1-2-privacy-impacts-and-threat-models"><span class="secno">1.2 </span>Privacy impacts and threat models<a class="self-link" aria-label="§" href="#privacy_threat_models"></a></h3>

        <p>Browser fingerprinting can be used as a security measure (e.g. as means of authenticating the user). However, fingerprinting is also a potential threat to users' privacy on the Web. This document does not attempt to provide a single unifying definition of "privacy" or "personal data", but we highlight how browser fingerprinting might impact users' privacy. For example, browser fingerprinting can be used to:</p>
        <ul>
          <li>identify a user</li>
          <li>correlate a user’s browsing activity within and across sessions</li>
          <li>track users without transparency or control</li>
        </ul>

        <p>The privacy implications associated with each use case are discussed below. Following from the practice of security threat model analysis, we note that there are distinct models of privacy threats for fingerprinting. Defenses against these threats differ, depending on the particular privacy implication and the threat model of the user.</p>

        <section id="identify-a-user">
          <h4 id="x1-2-1-identify-a-user"><span class="secno">1.2.1 </span>Identify a user<a class="self-link" aria-label="§" href="#identify-a-user"></a></h4>
          <p>There are many reasons why users might wish to remain anonymous or unidentified online, including: concerns about surveillance, personal physical safety, and concerns about discrimination against them based on what they read or write when using the Web. When a browser fingerprint is correlated with identifying information (like an email address, a recognized given and sur-name, or a government-issued identifier), an application or service provider may be able to identify an otherwise pseudonymous user. The adversary and consequences of this threat will vary by the particular user and use case, but can include nation-state intelligence agencies and threats of violence or imprisonment.</p>
        </section>
        
        <section id="correlation-of-browsing-activity">
          <h4 id="x1-2-2-correlation-of-browsing-activity"><span class="secno">1.2.2 </span>Correlation of browsing activity<a class="self-link" aria-label="§" href="#correlation-of-browsing-activity"></a></h4>
          <p>Browser fingerprinting raises privacy concerns even when offline identities are not implicated. Some users may be surprised or concerned that an online party can correlate multiple visits (on the same or different sites) to develop a profile or history of the user. This concern may be heightened because (see below) it may occur without the user's knowledge or consent and tools such as clearing cookies do not prevent further correlation.</p>
          <p>Browser fingerprinting also allows for tracking across <a class="externalDFN" href="https://tools.ietf.org/html/rfc6454#section-4">origins</a> [<cite><a class="bibref" href="#bib-rfc6454">RFC6454</a></cite>]: different sites may be able to combine information about a single user even where a cookie policy would block accessing of cookies between origins, because the fingerprint is relatively unique and the same for all origins.</p>
        </section>
        
        <section id="tracking-without-transparency-or-user-control">
          <h4 id="x1-2-3-tracking-without-transparency-or-user-control"><span class="secno">1.2.3 </span>Tracking without transparency or user control<a class="self-link" aria-label="§" href="#tracking-without-transparency-or-user-control"></a></h4>
          <p>
            In contrast to other mechanisms defined by Web standards for maintaining state (e.g. cookies), browser fingerprinting allows for collection of data about user activity without clear indications that such collection is happening. Transparency can be important for end users, to understand how ongoing collection is happening, but it also enables researchers, policymakers and others to document or regulate privacy-sensitive activity. Browser fingerprinting also allows for tracking of activity without clear or effective user controls: a browser fingerprint typically cannot be cleared or re-set. (See the finding on unsanctioned tracking [<cite><a class="bibref" href="#bib-tag-unsanctioned">TAG-UNSANCTIONED</a></cite>].)
          </p>
        </section>
    </section>
    <section id="what-can-we-do-about-it">
      <h3 id="x1-3-what-can-we-do-about-it"><span class="secno">1.3 </span>What can we do about it?<a class="self-link" aria-label="§" href="#what-can-we-do-about-it"></a></h3>
      <p>
        Advances in techniques for browser fingerprinting (see <a href="#research" class="sec-ref"><span class="secno">§&nbsp;A.</span> <span class="sec-title">Research</span></a>, below), particularly in <a href="#dfn-active-fingerprinting" class="internalDFN" data-link-type="dfn">active fingerprinting</a>, suggest that complete elimination of the capability of browser fingerprinting by a determined adversary through solely technical means that are widely deployed is implausible. However, mitigations in our technical specifications are possible, as described below (<a href="#mitigations" class="sec-ref"><span class="secno">§&nbsp;6.</span> <span class="sec-title">Mitigations</span></a>), and may achieve different levels of success (<a href="#feasibility" class="sec-ref"><span class="secno">§&nbsp;4.</span> <span class="sec-title">Feasibility</span></a>).
      </p>
      <p>
        Mitigations recommended here are simply mitigations, not solutions. Users of the Web cannot confidently rely on sites being completely unable to correlate traffic, especially when executing client-side code. A fingerprinting surface extends across all implemented Web features for a particular user agent, and even to other layers of the stack; for example, differences in TCP connections. For example, a user might employ an onion routing system such as Tor to limit network-level linkability, but still face the risk of correlating Web-based activity through browser fingerprinting, or vice versa. In order to mitigate these privacy risks as a whole, fingerprinting must be considered during the design and development of all specifications.
      </p>
      <p>
        The <abbr title="Technical Architecture Group">TAG</abbr> finding on Unsanctioned Web Tracking, including browser fingerprinting, includes description of the limitations of technical measures and encourages minimizing and documenting new fingerprinting surface [<cite><a class="bibref" href="#bib-tag-unsanctioned">TAG-UNSANCTIONED</a></cite>]. The best practices below detail common actions that authors of specifications for Web features can take to mitigate the privacy impacts of browser fingerprinting. The Self-Review Questionnaire documents mitigations of privacy impacts in Web features more generally that may complement these practices [<cite><a class="bibref" href="#bib-security-privacy-questionnaire-tag">security-privacy-questionnaire-tag</a></cite>].
      </p>
    </section>
    </section>
    
    <section id="bp-summary"><!--OddPage--><h2 id="x2-best-practices-summary"><span class="secno">2. </span>Best Practices Summary<a class="self-link" aria-label="§" href="#bp-summary"></a></h2><ul class="practicebox"><li><a href="#avoid-passive-increases">Best Practice 1</a>: Avoid unnecessary or severe increases to fingerprinting surface, especially for passive fingerprinting.</li><li><a href="#narrow-scope-availability">Best Practice 2</a>: Narrow the scope and availability of a feature with fingerprinting surface to what is functionally necessary.</li><li><a href="#mark-fingerprinting">Best Practice 3</a>: Mark features that contribute to fingerprintability.</li><li><a href="#specify-ordering">Best Practice 4</a>: Specify orderings and non-functional differences.</li><li><a href="#api-minimization">Best Practice 5</a>: Design APIs to access only the entropy necessary.</li><li><a href="#server-advertisement">Best Practice 6</a>: Require servers to advertise or opt in to access data.</li><li><a href="#anticipate-disabled">Best Practice 7</a>: Enable graceful degradation for privacy-conscious users or implementers.</li><li><a href="#no-new-cookies">Best Practice 8</a>: Avoid unnecessary new local state mechanisms.</li><li><a href="#mark-cookie-like">Best Practice 9</a>: Highlight any local state mechanisms to enable simultaneous clearing.</li><li><a href="#no-permanent">Best Practice 10</a>: Limit permanent or persistent state.</li></ul></section>
    
    <section id="types-of-fingerprinting">
        <!--OddPage--><h2 id="types_of_fingerprinting"><span class="secno">3. </span>Types of fingerprinting<a class="self-link" aria-label="§" href="#types-of-fingerprinting"></a></h2>
        <section id="passive-0">
          <h3 id="passive"><span class="secno">3.1 </span>Passive<a class="self-link" aria-label="§" href="#passive-0"></a></h3>
          <p><dfn data-dfn-type="dfn" id="dfn-passive-fingerprinting">Passive fingerprinting</dfn> is browser fingerprinting based on characteristics observable in the contents of Web requests, without the use of any code executed on the client.</p>
          <p>Passive fingerprinting would trivially include cookies (often unique identifiers sent in HTTP requests), the set of HTTP request headers and the IP address and other network-level information. The <a href="https://tools.ietf.org/html/rfc7231#section-5.5.3">User-Agent string</a> [<cite><a class="bibref" href="#bib-rfc7231">RFC7231</a></cite>], for example, is an HTTP request header that typically identifies the browser, renderer, version and operating system. For some populations, the User-Agent and IP address will often uniquely identify a particular user's browser [<cite><a class="bibref" href="#bib-ndss-fingerprinting">NDSS-FINGERPRINTING</a></cite>].</p>
        </section>
        <section id="active-0">
          <h3 id="active"><span class="secno">3.2 </span>Active<a class="self-link" aria-label="§" href="#active-0"></a></h3>
          <p>For <dfn data-dfn-type="dfn" id="dfn-active-fingerprinting">active fingerprinting</dfn>, we also consider techniques where a site runs JavaScript or other code on the local client to observe additional characteristics about the browser, user, device or other context.</p>
          <p>Techniques for active fingerprinting might include accessing the window size, enumerating fonts or plug-ins, evaluating performance characteristics, reading from device sensors, and rendering graphical patterns. Key to this distinction is that <a href="#dfn-active-fingerprinting" class="internalDFN" data-link-type="dfn">active fingerprinting</a> takes place in a way that is potentially detectable on the client.</p>
        </section>
        <section id="cookie-like">
          <h3 id="cookie_like_setting_retrieving_local_state"><span class="secno">3.3 </span>Cookie-like<a class="self-link" aria-label="§" href="#cookie-like"></a></h3>
          <p>Users, user agents and devices may also be re-identified by a site that first sets and later retrieves state stored by a user agent or device. This <dfn data-dfn-type="dfn" id="dfn-cookie-like-fingerprinting">cookie-like fingerprinting</dfn> allows re-identification of a user or inferences about a user in the same way that HTTP cookies allow state management for the stateless HTTP protocol [<cite><a class="bibref" href="#bib-rfc6265">RFC6265</a></cite>].</p>
          <p>Cookie-like fingerprinting can also circumvent user attempts to limit or clear cookies stored by the user agent, as demonstrated by the "evercookie" implementation [<cite><a class="bibref" href="#bib-evercookie">EVERCOOKIE</a></cite>]. Where state is maintained across user agents (as in the case of common plugins with local storage), across devices (as in the case of certain browser syncing mechanisms) or across software upgrades, cookie-like fingerprinting can allow re-identification of users, user agents or devices where active and passive fingerprinting might not. The Security and Privacy Self-Review Questionnaire also considers this threat in origin state that persists across browsing sessions [<cite><a class="bibref" href="#bib-security-privacy-questionnaire-tag">security-privacy-questionnaire-tag</a></cite>].</p>
        </section>
    </section>

    <section id="feasibility">
      <!--OddPage--><h2 id="x4-feasibility"><span class="secno">4. </span>Feasibility<a class="self-link" aria-label="§" href="#feasibility"></a></h2>
      
      <section id="fingerprinting-mitigation-levels-of-success">
          <h3 id="x4-1-fingerprinting-mitigation-levels-of-success"><span class="secno">4.1 </span>Fingerprinting mitigation levels of success<a class="self-link" aria-label="§" href="#fingerprinting-mitigation-levels-of-success"></a></h3>
          <p>There are different levels of success in mitigating browser fingerprinting:</p>
          <dl>
          <dt>Decreased fingerprinting surface</dt><dd>Removing the source of entropy or accessible attributes that can be used for fingerprinting.</dd>
          <dt>Increased anonymity set</dt><dd>By standardization, convention or common implementation, increasing the commonality of particular configurations to decrease the likelihood of unique fingerprintability.</dd>
          <dt>Detectable fingerprinting</dt><dd>Making fingerprinting observable to others, so that the user agent might block it or researchers can determine that it's happening.</dd>
          <dt>Clearable local state</dt><dd>Helping users respond to fingerprinting by making state mechanisms clearable.</dd>
          </dl>
          <p>Research has shown feasible improvement in privacy protection in all of these areas. While lists of plugins remain a large fingerprinting surface, entropy has decreased over time with migration to Web APIs over plugins [<cite><a class="bibref" href="#bib-hiding-crowd">HIDING-CROWD</a></cite>]. Collected data on Web users has shown mobile devices to have substantially larger anonymity sets than desktop browsers [<cite><a class="bibref" href="#bib-hiding-crowd">HIDING-CROWD</a></cite>]. Research on forms of active fingerprinting has documented its use and demonstrated changes in use of those techniques as an apparent result of increased awareness [<cite><a class="bibref" href="#bib-wpm-million">WPM-MILLION</a></cite>]. Respawning of cookies has continued, with an increasing variety of techniques, but awareness and technical responses to the issue has made the practice less widespread [<cite><a class="bibref" href="#bib-flashcookies-2">FLASHCOOKIES-2</a></cite>].</p>
      </section>
      <section id="feasible-goals-for-specification-authors">
        <h3 id="x4-2-feasible-goals-for-specification-authors"><span class="secno">4.2 </span>Feasible goals for specification authors<a class="self-link" aria-label="§" href="#feasible-goals-for-specification-authors"></a></h3>
        <p>
          This document works under the expectation that mitigations with different levels of success are feasible under different circumstances, for different threat models and against different types of fingerprinting. In general, active fingerprinting may be made detectable; we can minimize increases to the surface of passive fingerprinting; and cookie-like mechanisms can be made clearable.</p>
        <p>
          Some implementers and some users may be willing to accept reduced functionality or decreased performance in order to minimize browser fingerprinting. Documenting which features have fingerprinting risk eases the work of implementers building modes for these at-risk users; minimizing fingerprinting even in cases where common implementations will have easy active fingerprintability allows such users to reduce the functionality trade-offs necessary. Making browser fingerprinting more detectable also contributes to mitigations outside the standardization process; for example, though regulatory or policy means [<cite><a class="bibref" href="#bib-tag-unsanctioned">TAG-UNSANCTIONED</a></cite>].
        </p>
      </section>
    </section>
    <section id="identifying-fingerprinting-surface-and-evaluating-severity">
      <!--OddPage--><h2 id="identifying"><span class="secno">5. </span>Identifying fingerprinting surface and evaluating severity<a class="self-link" aria-label="§" href="#identifying-fingerprinting-surface-and-evaluating-severity"></a></h2>      

      <p>To mitigate browser fingerprinting in your specification:</p>
      <ol>
        <li>identify features that can be used for browser fingerprinting;</li>
        <li>evaluate the severity of the fingerprinting surface based on <a href="#severity-list">these five factors</a>; and,</li>
        <li>apply mitigations described in the best practices below (<a href="#mitigations" class="sec-ref"><span class="secno">§&nbsp;6.</span> <span class="sec-title">Mitigations</span></a>), focused on limiting the severity of that fingerprinting surface.</li>
      </ol>
        
      <p>The <dfn id="dfn-fingerprinting-surface" data-export="" data-dfn-type="dfn">fingerprinting surface</dfn> of a user agent is the set of observable characteristics that can be used in concert to identify a user, user agent or device or correlate its activity.</p>

      <p>Data sources that may be used for browser fingerprinting include:</p>
      <ul>
        <li>user configuration</li>
        <li>device characteristics</li>
        <li>environmental characteristics <em>(e.g. sensor readings)</em></li>
        <li>operating system characteristics</li>
        <li>user behavior</li>
        <li>browser characteristics</li>
      </ul>

      <p>These data sources may be accessed directly for some features, but in many other cases they are inferred through some other observation. Timing channels, in particular, are commonly used to infer details of hardware (exactly how quickly different operations are completed may provide information on GPU capability, say), network information (via the latency or speed in loading a particular resource) or even user configuration (what items have been previously cached or what resources are not loaded). Consider the side effects of feature and how those side effects would allow inferences of any of these characteristics.</p>

      <p>The <a href="https://www.torproject.org/projects/torbrowser/design/#fingerprinting-linkability">Tor Browser design document</a> [<cite><a class="bibref" href="#bib-tor-design">TOR-DESIGN</a></cite>] has more details on these sources and their relative priorities; this document adds environmental characteristics in that sensor readings or data access may distinguish a user, user agent or device by information about the environment (location, for example).</p>

      <p id="severity-list">For each identified feature, consider the severity for the privacy impacts described above (<a href="#privacy_threat_models" class="sec-ref"><span class="secno">§&nbsp;1.2</span> <span class="sec-title">Privacy impacts and threat models</span></a>) based on the following factors:</p>

      <dl>
        <dt>entropy</dt><dd>How distinguishing is this new surface? Consider both the possible variations and the likely distribution of values. Adding 1-bit of entropy is typically of less concern; 30-some bits of entropy would be enough to uniquely identify every individual person. Different data sources may provide different distributions of variation; for example, some characteristics may reveal a common hardware class while other characteristics may reveal user configurations that vary between individual people.</dd>
        <dt>detectability</dt><dd>Will use of this feature for browser fingerprinting be observable to the user agent or likely to be discoverable by researchers? Because detectability is an important — and perhaps the most feasible — mitigation, increases to the surface for <a href="#dfn-passive-fingerprinting" class="internalDFN" data-link-type="dfn">passive fingerprinting</a> are of particular concern and should be avoided.</dd>
        <dt>persistence</dt><dd>How long will the characteristics of this fingerprinting surface stay unchanged? Can users control or re-set these values to prevent long-lived identification? While short-lived characteristics may still enable unexpected correlation of activity (for example, between two browser profiles on the same device), persistent or permanent identifiers are particularly concerning for the lack of user control.</dd>
        <dt>availability</dt><dd>Will this surface be accessible to the "drive-by Web" or only in certain contexts where a user has granted a particular sensor permission or directly authenticated? While browser fingerprinting is still something to mitigate in the permissioned context, the concern that a feature will end up used primarily for fingerprinting is reduced.</dd>
        <dt>scope</dt><dd>Is this surface consistent across origins or only within a single origin? In general, characteristics or identifiers that are tied to a particular origin are of less concern and can be handled with the same tools as HTTP cookies.</dd>
      </dl>

      <p>While we do not recommend specific trade-offs, these factors can be used to weigh increases to that surface (<a href="#weighing_increased_fingerprinting_surface" class="sec-ref"><span class="secno">§&nbsp;6.1</span> <span class="sec-title">Weighing increased fingerprinting surface</span></a>) and suggest appropriate mitigations. Although each factor may suggest specific mitigations, in weighing whether to add <a href="#dfn-fingerprinting-surface" class="internalDFN" data-link-type="dfn">fingerprinting surface</a> they should be considered in concert. For example, access to a new set of characteristics about the user may be high entropy, but be of less concern because it has limited availability and is easily detectable. A cross-origin, drive-by-accessible, permanent, passive unique identifier is incompatible with our expectations for privacy on the Web.</p>

      <p>In conducting this analysis, it may be tempting to dismiss certain fingerprinting surface in a specification because of a comparison to fingerprinting surface exposed by other parts of the Web platform or other layers of the stack. Be cautious about making such claims. First, while similar information may be available through other means, similar is not identical: information disclosures may not be exactly the same and fingerprintability is promoted by combining these distinct sources. Second, where identical entropy is present, other factors of severity or accessibility may differ and those factors are important for feasible mitigation. Third, the platform is neither monolithic nor static; not all other features are implemented in all cases and may change (or be removed) in the future. Fourth, circular dependencies are a danger when so many new features are under development; two specifications sometimes refer to one another in arguing that fingerprinting surface already exists. It is more useful to reviewers and implementers to consider the fingerprinting surface provided by the particular Web feature itself, with specific references where surface may be accessible through other features as well.</p>

    </section>
    <section id="mitigations">
        <!--OddPage--><h2 id="x6-mitigations"><span class="secno">6. </span>Mitigations<a class="self-link" aria-label="§" href="#mitigations"></a></h2>
        <section id="weighing_increased_fingerprinting_surface">
          <h3 id="x6-1-weighing-increased-fingerprinting-surface"><span class="secno">6.1 </span>Weighing increased fingerprinting surface<a class="self-link" aria-label="§" href="#weighing_increased_fingerprinting_surface"></a></h3>
          <p>Web specification authors regularly attempt to strike a balance between new functionality and fingerprinting surface. For example, feature detection functionality allows for progressive enhancement with a small addition to fingerprinting surface; detailed enumerations of plugins, fonts, connected devices may provide a large fingerprinting surface with minimal functional support.</p>
          <p>Authors and Working Groups determine the appropriate balance between these properties on a case-by-case basis, given their understanding of the functionality, its implementations and the severity of increased fingerprinting surface. However, given the distinct privacy impacts described above and in order to improve consistency across specifications, these practices provide some guidance:</p>
          
          <div class="practice">
            <p>
              <span id="avoid-passive-increases" class="practicelab"><span class="practicetitle">Best Practice 1</span>: Avoid unnecessary or severe increases to fingerprinting surface, especially for passive fingerprinting.</span>
            </p>
            <p class="practicedesc">
              Consider each of the <a href="#severity-list">severity factors</a> described above and whether that functionality is necessary and whether comparable functionality is feasible with less severe increases to the fingerprinting surface.
            </p>
            <p class="practicedesc">
              In particular, unless a feature cannot reasonably be designed in any other way, increased passive fingerprintability should be avoided. Passive fingerprinting allows for easier and widely-available identification, without opportunities for external detection or control by users or third parties.
            </p>
          </div>

          <div class="practice">
            <p>
              <span id="narrow-scope-availability" class="practicelab"><span class="practicetitle">Best Practice 2</span>: Narrow the scope and availability of a feature with fingerprinting surface to what is functionally necessary.</span>
            </p>
            <p class="practicedesc">
              What browsing contexts, resources and requests need access to a particular feature?  Identifiers can often be scoped to have a different value in different origins. Some configuration may only be necessary in top-level browsing contexts.
            </p>
            <p class="practicedesc">
              Should access to this functionality be limited to where users have granted a particular permission? While excessive permissions can create confusion and fatigue, limiting highly granular data to situations where a user has already granted permission to access sensitive data widely mitigates the risk of that feature being used primarily for browser fingerprinting in "drive-by" contexts. For example, Media Capture and Streams [<cite><a class="bibref" href="#bib-mediacapture-streams">mediacapture-streams</a></cite>] limits access to attached microphone and camera device labels to when the user has granted permission to access a camera or microphone (while still allowing access to the number and configuration of attached cameras and microphones in all contexts, a noted increase in drive-by fingerprinting surface).
            </p>
          </div>

          <p>Some implementations may also limit the entropy of fingerprinting surface by not exposing different capabilities for different devices or installations of a user agent. Font lists, for example, can be limited to a whitelist commonly available on all devices that run a particular browser or operating system (as implemented in Tor Browser, Firefox and Safari).</p>
          
          <div class="practice">
            <p>
              <span id="mark-fingerprinting" class="practicelab"><span class="practicetitle">Best Practice 3</span>: Mark features that contribute to fingerprintability.</span>
            </p>
            <p class="practicedesc">
              <img src="https://www.w3.org/TR/html5/images/fingerprint.png" class="fingerprint" alt="This feature may contribute to browser fingerprintability." height="21" width="15">
              Where a feature does contribute to the <a href="#dfn-fingerprinting-surface" class="internalDFN" data-link-type="dfn">fingerprinting surface</a>, indicate that impact, by explaining the effect (and any known implementer mitigations) and marking the relevant section with a fingerprinting icon, as this paragraph is.            
            </p>
          </div>
          <div class="example">
            The following code can be used to mark a paragraph with the fingerprint icon.
            <pre class="highlight" aria-busy="false"><code class="hljs javascript">&lt;img src=<span class="hljs-string">"https://www.w3.org/TR/html5/images/fingerprint.png"</span> 
     <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">"fingerprint"</span> 
     alt=<span class="hljs-string">"This feature may contribute to browser fingerprintability."</span>&gt;</code></pre>
          </div>
        </section>
        <section id="standardization">
			<h3 id="a_standardized_profile"><span class="secno">6.2 </span>Standardization<a class="self-link" aria-label="§" href="#standardization"></a></h3>
			<p>
        Specifications can mitigate against fingerprintability through standardization; by defining a consistent behavior, conformant implementations won't have variations that can be used for browser fingerprinting.
			</p>
      <p>
        Randomization of certain browser characteristics has been proposed as a way to combat browser fingerprinting. While this strategy may be pursued by some implementations, we expect in general it will be more effective for us to standardize or null values rather than setting a range over which they can vary. The Tor Browser design [<cite><a class="bibref" href="#bib-tor-design">TOR-DESIGN</a></cite>] provides more detailed information, but in short: it's difficult to measure how well randomization will work as a mitigation and it can be costly to implement in terms of usability (varying functionality or design in unwanted ways), processing (generating random numbers) and development (including the cost of introducing new security vulnerabilities). Standardization provides the benefit of an increased anonymity set for conformant browsers with the same configuration: that is, an individual can look the same as a larger group of people rather than trying to look like a number of different individuals.
      </p>
      <div class="practice">
        <p>
          <span id="specify-ordering" class="practicelab"><span class="practicetitle">Best Practice 4</span>: Specify orderings and non-functional differences.</span>
        </p>
        <p class="practicedesc">
          To reduce unnecessary entropy, specify aspects of API return values and behavior that don't contribute to functional differences. For example, if the ordering of return values in a list has no semantic value, specify a particular ordering (alphabetical order by a defined algorithm, for example) so that incidental differences don't expose fingerprinting surface.
        </p>
        <p class="practicedesc">
          Access to a list of system fonts via Flash or Java plugins notably returns the list sorted not in a standard alphabetical order, but in an unspecified order specific to the system. This ordering adds to the entropy available from that plugin in a way that provides no functional advantage. (See <a href="https://trac.webkit.org/wiki/Fingerprinting#ii.CollectingSystemFontsviaFlashPlugins">Collecting System Fonts via Flash Plugins</a>.)
        </p>
      </div>
      <p>
        Standardization does <em>not</em> need to attempt to hide all differences between different browsers (e.g. Edge and Chrome); implemented functionality and behavior differences will always exist between different implementations. For that reason, removing <code>User-Agent</code> headers altogether is not a goal. However, variation in the <code>User-Agent</code> string that reveals additional information about the user or device has been shown to provide substantial fingerprinting surface [<cite><a class="bibref" href="#bib-beauty-beast">BEAUTY-BEAST</a></cite>].
      </p>
		</section>
        <section id="detectability">
          <h3 id="x6-3-detectability"><span class="secno">6.3 </span>Detectability<a class="self-link" aria-label="§" href="#detectability"></a></h3>
          <p>Where a client-side API provides some fingerprinting surface, authors can still mitigate the privacy concerns via detectability. If client-side fingerprinting activity is to some extent distinguishable from functional use of APIs, user agent implementations may have an opportunity to prevent ongoing fingerprinting or make it observable to users and external researchers (including academics or relevant regulators) who may be able to detect and investigate the use of fingerprinting.</p>
          
          <div class="practice">
            <p>
              <span id="api-minimization" class="practicelab"><span class="practicetitle">Best Practice 5</span>: Design APIs to access only the entropy necessary.</span>
            </p>
            <p class="practicedesc">
              Following the basic principle of <a href="https://tools.ietf.org/html/rfc6973#section-6.1">data minimization</a> [<cite><a class="bibref" href="#bib-rfc6973">RFC6973</a></cite>], design your APIs such that a site can access (and does access by default) only the entropy necessary for particular functionality.
            </p>
            <p class="practicedesc">
              Authors might design an API to allow for querying of a particular value, rather than returning an enumeration of all values. User agents and researchers can then more easily distinguish between sites that query for one or two particular values (gaining minimal entropy) and those that query for all values (more likely attempting to fingerprint the browser); or implementations can cap the number of different values. For example, Tor Browser limits the number of fonts that can be queried with a <code>browser.display.max_font_attempts</code> preference.
            </p>
            <p class="practicedesc">
              The granularity or precision of information returned can be minimized in order to reduce entropy. For example, implementations of the Battery Status API [<cite><a class="bibref" href="#bib-battery-status">BATTERY-STATUS</a></cite>] allowed for high precision (double-precision, or 15-17 significant digits) readings of the current battery level, which provided a short-term identifier that could be used to correlate traffic across origins or clearance of local state. Rounding off values to lower precision mitigates browser fingerprinting while maintaining functional use cases. Alternatively, providing Boolean or a small enumeration of values might provide functionality without revealing underlying details; for example, the Boolean <code>near</code> property in the Proximity Sensor API [<cite><a class="bibref" href="#bib-proximity">PROXIMITY</a></cite>].
            </p>
            <p class="practicedesc">
              For more information, see:
            </p>
            <ul class="practicedesc">
              <li><a href="https://www.w3.org/TR/dap-privacy-reqs/">Device API Privacy Requirements</a> [<cite><a class="bibref" href="#bib-dap-privacy-reqs">dap-privacy-reqs</a></cite>], <abbr title="Device APIs Working Group">DAP</abbr> Working Group Note, June 2010.</li>
              <li><a href="https://www.w3.org/2001/tag/doc/APIMinimization">Data Minimization in Web APIs</a> [<cite><a class="bibref" href="#bib-tag-minimization">TAG-MINIMIZATION</a></cite>], <abbr title="World Wide Web Consortium">W3C</abbr> <abbr title="Technical Architecture Group">TAG</abbr>, September 2011.</li>
              <li><a href="https://www.w3.org/TR/generic-sensor/#security-and-privacy">Generic Sensor API: Security and privacy considerations</a> [<cite><a class="bibref" href="#bib-generic-sensor">generic-sensor</a></cite>], March 2018.</li>
              <li><a href="https://eprint.iacr.org/2015/616.pdf">The leaking battery: A privacy analysis of the HTML5 Battery Status API</a> [<cite><a class="bibref" href="#bib-leaking-battery">LEAKING-BATTERY</a></cite>], 2015.</li>
            </ul>
          </div>
          <p>
            Related, detectability is improved even with data sent in HTTP headers (what we would typically consider passive fingerprinting) if sites are required to request access (or "opt in") to information before it's sent.
          </p>
          <div class="practice">
              <p>
                <span id="server-advertisement" class="practicelab"><span class="practicetitle">Best Practice 6</span>: Require servers to advertise or opt in to access data.</span>
              </p>
              <p class="practicedesc">
                Even for data sent in HTTP request headers, requiring servers to advertise use of particular data, publicly document a policy, or "opt in" before clients send configuration data provides the possibility of detection by user agents or researchers.
              </p>
              <p class="practicedesc">
                For example, Client Hints [<cite><a class="bibref" href="#bib-httpbis-client-hints">httpbis-client-hints</a></cite>] proposes an <code>Accept-CH</code> response header for services to indicate that specific hints can be used for content negotiation, rather than all supporting clients sending all hints in all requests.
              </p>
              <div class="note" role="note" id="issue-container-generatedID"><div role="heading" class="note-title marker" id="h-note" aria-level="4"><span>Note</span></div><p class="">
                This is a relatively new approach; we're still evaluating whether this provides meaningful and useful detectability.
              </p></div>
          </div>

          <p>
            Implementers can facilitate detectability by providing or enabling instrumentation so that users or third parties are able to calculate when fingerprinting surface is being accessed. Of particular importance for instrumentation are: access to all the different sources of fingerprinting surface; identification of the originating script; avoiding exposure that instrumentation is taking place. Beyond the minimization practice described above, these are largely implementation-specific (rather than Web specification) features.
          </p>
          <p>
            If your specification exposes some fingerprinting surface (whether it's active or passive), some implementers (e.g. Tor Browser) are going to be compelled to disable those features for certain privacy-conscious users.
          </p>
          <div class="practice">
            <p>
              <span id="anticipate-disabled" class="practicelab"><span class="practicetitle">Best Practice 7</span>: Enable graceful degradation for privacy-conscious users or implementers.</span>
            </p>
            <p class="practicedesc">
              Following the principle of progressive enhancement, and to avoid further divergence (which might itself expose variation in users), consider whether some functionality in your specification is still possible if fingerprinting surface features are disabled. 
            </p>
            <p class="practicedesc">
              Explicit hooks or API flags may be used so that browser extensions or certain user agents can easily disable specific features. For example, the <a href="https://www.w3.org/TR/html52/semantics-scripting.html#canvas-origin-clean">origin-clean flag</a> [<cite><a class="bibref" href="#bib-html52">html52</a></cite>] allows control over whether an image canvas can be read, a significant fingerprinting surface.
            </p>
          </div>     
        </section>
        <section id="clearing-all-local-state">
          <h3 id="x6-4-clearing-all-local-state"><span class="secno">6.4 </span>Clearing all local state<a class="self-link" aria-label="§" href="#clearing-all-local-state"></a></h3>
          <p>Features which enable storage of data on the client and functionality for client- or server-side querying of that data can increase the ease of cookie-like fingerprinting. Storage can vary between large amounts of data (for example, the Web Storage API) or just a binary flag (has or has not provided a certain permission; has or has not cached a single resource).</p>
          <div class="practice">
            <p>
              <span id="no-new-cookies" class="practicelab"><span class="practicetitle">Best Practice 8</span>: Avoid unnecessary new local state mechanisms.</span>
            </p>
            <p class="practicedesc">
              If functionality does not require maintaining client-side state in a way that is subsequently queryable (or otherwise observable), avoid creating a new cookie-like feature. Can the functionality be accomplished with existing HTTP cookies or an existing JavaScript local storage API?
            </p>
            <p class="practicedesc">
              For example, the Flash plugin's Local Shared Objects (LSOs) have often been used to duplicate and re-spawn HTTP cookies cleared by the user [<cite><a class="bibref" href="#bib-flashcookies">FLASHCOOKIES</a></cite>].
            </p>
          </div>
          <p>Where features do require setting and retrieving local state, there are ways to mitigate the privacy impacts related to unexpected cookie-like behavior; in particular, you can help implementers prevent "permanent", "zombie", "super" or "evercookies".</p>
          <div class="practice">
            <p>
              <span id="mark-cookie-like" class="practicelab"><span class="practicetitle">Best Practice 9</span>: Highlight any local state mechanisms to enable simultaneous clearing.</span>
            </p>
            <p class="practicedesc">
              Clearly note where state is being maintained and could be queried and provide guidance to implementers on enabling simultaneous deletion of local state for users. Such functionality can mitigate the threat of "evercookies"  because the presence of state in one such storage mechanism can't be used to persist and re-create an identifier.
            </p>
          </div>
          <p>Permanent or persistent data (including any identifiers) are of particular risk because they undermine the ability for a user to clear or re-set the state of their device or to maintain different identities.</p>
          <div class="practice">
            <p>
              <span id="no-permanent" class="practicelab"><span class="practicetitle">Best Practice 10</span>: Limit permanent or persistent state.</span>
            </p>
            <p class="practicedesc">
              Permanent identifiers or other state (for example, identifiers or keys set in hardware) should typically not be exposed. Where necessary, access to such identifiers would require user permission (however, explaining the implications of such permission to users may be difficult) and limitation to a particular origin (however, server-side collusion between origins will be difficult to detect).
              As a result, your design should not rely on saving and later querying data on the client beyond a user's clearing cookies or other local state. That is, you should not expect any local state information to be permanent or to persist longer than other local state.
            </p>
          </div>
          <p>Though not strictly browser fingerprinting, there are other privacy concerns regarding user tracking for features that provide local storage of data. Mitigations suggested in the Web Storage API specification include: white-listing, black-listing, expiration and secure deletion [<cite><a class="bibref" href="#bib-webstorage-user-tracking">WEBSTORAGE-user-tracking</a></cite>].</p>
        </section>
        <section id="do-not-track"><h3 id="do_not_track_a_cooperative_approach"><span class="secno">6.5 </span>Do Not Track<a class="self-link" aria-label="§" href="#do-not-track"></a></h3>
          <p>Expressions of, and compliance with, a Do Not Track signal does not inhibit the capability of browser fingerprinting, but may mitigate some user concerns about fingerprinting, specifically around tracking as defined in those specifications [<cite><a class="bibref" href="#bib-tracking-dnt">TRACKING-DNT</a></cite>] [<cite><a class="bibref" href="#bib-tracking-compliance">TRACKING-COMPLIANCE</a></cite>] and as implemented by services that comply with those user preferences. That is, <abbr title="Do Not Track">DNT</abbr> can mitigate concerns with cooperative sites.</p>
          <p>The use of <abbr title="Do Not Track">DNT</abbr> in this way typically does not require changes to other functional specifications. 
            If your specification expects a particular behavior upon receiving a particular <abbr title="Do Not Track">DNT</abbr> signal, indicate that with a reference to [<cite><a class="bibref" href="#bib-tracking-dnt">TRACKING-DNT</a></cite>].
            If your specification introduces a new communication channel that could be used for tracking, you might wish to define how a <abbr title="Do Not Track">DNT</abbr> signal should be communicated.
          </p>
        </section>
    </section>
    
    <section class="appendix" id="research">
        <!--OddPage--><h2 id="a-research"><span class="secno">A. </span>Research<a class="self-link" aria-label="§" href="#research"></a></h2>

        <section id="browser-vendor-documentation">
          <h3 id="a-1-browser-vendor-documentation"><span class="secno">A.1 </span>Browser vendor documentation<a class="self-link" aria-label="§" href="#browser-vendor-documentation"></a></h3>
        
        <p>Some browser developers maintain pages on browser fingerprinting, including: potential mitigations or modifications necessary to decrease the surface of that browser engine; different vectors that can be used for fingerprinting; potential future work. These are not cheery, optimistic documents.</p>
        <ul>
          <li>The Chromium Projects: <a href="https://sites.google.com/a/chromium.org/dev/Home/chromium-security/client-identification-mechanisms#TOC-Fingerprinting-prevention-and-detection-challenges">Technical analysis of client identification mechanisms</a></li>
          <li><a href="https://trac.webkit.org/wiki/Fingerprinting">WebKit Wiki: Fingerprinting</a></li>
          <li><a href="https://wiki.mozilla.org/Fingerprinting">Mozilla Wiki: Fingerprinting</a></li>
          <li><a href="https://www.torproject.org/projects/torbrowser/design/#fingerprinting-linkability">The Design and Implementation of the Tor Browser: Cross-Origin Fingerprinting Unlinkability</a></li>
        </ul>
      </section>

      <section id="academic-research">
        <h3 id="a-2-academic-research"><span class="secno">A.2 </span>Academic research<a class="self-link" aria-label="§" href="#academic-research"></a></h3>        
        <p>What are the key papers to read here, historically or to give the latest on fingerprinting techniques? What are some areas of open research that might be relevant?</p>
        <ul>
          <li>Eckersley, Peter. "<a href="https://panopticlick.eff.org/static/browser-uniqueness.pdf">How unique is your web browser?</a>" <i>Privacy Enhancing Technologies</i>. Springer Berlin Heidelberg, 2010.</li>
          <li>Mowery, Keaton, Dillon Bogenreif, Scott Yilek, and Hovav Shacham. “<a href="https://cseweb.ucsd.edu/~kmowery/papers/js-fingerprinting.pdf">Fingerprinting Information in JavaScript Implementations</a>.” In <i>Web 2.0 Security and Privacy</i>, 2011.</li>
          <li>Yen, Ting-Fang, et al. "<a href="https://www.microsoft.com/en-us/research/publication/host-fingerprinting-and-tracking-on-the-webprivacy-and-security-implications/">Host fingerprinting and tracking on the web: Privacy and security implications</a>." <em>Proceedings of NDSS</em>. 2012. [<cite><a class="bibref" href="#bib-ndss-fingerprinting">NDSS-FINGERPRINTING</a></cite>]</li>
          <li>Mowery, Keaton, and Hovav Shacham. "<a href="https://hovav.net/ucsd/dist/canvas.pdf">Pixel perfect: Fingerprinting canvas in HTML5</a>." <i>Web 2.0 Security and Privacy</i>, 2012.</li>
          <li id="wsj-orbitz">Mattioli, Dana. "<a href="https://www.wsj.com/articles/SB10001424052702304458604577488822667325882">On Orbitz, Mac Users Steered to Pricier Hotels</a>". <i>Wall Street Journal</i>, August 23, 2012.</li>
          <li id="FPDetective">Gunes Acar et al. "<a href="https://dl.acm.org/citation.cfm?id=2516674">FPDetective: dusting the web for fingerprinters</a>." In <i>CCS '13</i>.</li>
          <li>Nikiforakis, Nick, et al. "<a href="https://seclab.cs.ucsb.edu/media/uploads/papers/sp2013_cookieless.pdf">Cookieless monster: Exploring the ecosystem of web-based device fingerprinting</a>." <i>IEEE Symposium on Security and Privacy (S&amp;P 2013)</i>, 2013.</li>
          <li>G. Acar, C. Eubank, S. Englehardt, M. Juarez, A. Narayanan, C. Diaz. "<a href="https://securehomes.esat.kuleuven.be/%7Egacar/persistent/">The Web never forgets: Persistent tracking mechanisms in the wild</a>." In <i>Proceedings of CCS 2014</i>, Nov. 2014.</li>
          <li>Steven Englehardt, Arvind Narayanan. "<a href="https://webtransparency.cs.princeton.edu/webcensus/">Online tracking: A 1-million-site measurement and analysis</a>." May 2016. [<cite><a class="bibref" href="#bib-wpm-million">WPM-MILLION</a></cite>]</li>
          <li>Pierre Laperdrix, Walter Rudametkin, Benoit Baudry. "<a href="https://hal.inria.fr/hal-01285470v2/">Beauty and the Beast: Diverting modern web browsers to build unique browser fingerprints</a>." <i>IEEE Symposium on Security and Privacy (S&amp;P 2016)</i>, May 2016.</li>
          <li>
            "<a href="https://hal.inria.fr/hal-01718234v2">Hiding in the Crowd: an Analysis of the Effectiveness of Browser Fingerprinting at Large Scale</a>." <i>WWW2018 - TheWebConf 2018: 27th International World Wide Web Conference</i>, April 2018. [<cite><a class="bibref" href="#bib-hiding-crowd">HIDING-CROWD</a></cite>]
          </li>
        </ul>
      </section>
        <section id="testing">
        <h3 id="a-3-testing"><span class="secno">A.3 </span>Testing<a class="self-link" aria-label="§" href="#testing"></a></h3>
        <p>A non-exhaustive list of sites that allow the visitor to test their configuration for fingerprintability.</p>
        <ul>
          <li><a href="https://amiunique.org/">amiunique.org</a> (INRIA)</li>
          <li><a href="https://panopticlick.eff.org/">panopticlick.eff.org</a> (EFF)</li>
          <li><a href="https://browserspy.dk/">BrowserSPY.dk</a></li>
          <li><a href="https://fingerprint.pet-portal.eu/">pet-portal cross-browser fingerprinting test</a></li>
          <li><a href="http://lcamtuf.coredump.cx/p0f3/">p0f v3</a> (purely passive fingerprinting)</li>
        </ul>
        </section>
    </section>    
    
    <section class="appendix" id="acknowledgements">
      <!--OddPage--><h2 id="b-acknowledgements"><span class="secno">B. </span>Acknowledgements<a class="self-link" aria-label="§" href="#acknowledgements"></a></h2>
      <p>
        Many thanks to Robin Berjon for ReSpec and to Tobie Langel for Github advice; to the Privacy Interest Group and the Technical Architecture Group for review; to the Tor Browser designers for references and recommendations; and to Christine Runnegar for contributions.
      </p>
    </section>
  

<section id="references" class="appendix">
      <!--OddPage--><h2 id="c-references"><span class="secno">C. </span>References<a class="self-link" aria-label="§" href="#references"></a></h2>
      
    <section id="informative-references">
        <h3 id="c-1-informative-references"><span class="secno">C.1 </span>Informative references<a class="self-link" aria-label="§" href="#informative-references"></a></h3>
      <dl class="bibliography">
        <dt id="bib-battery-status">[BATTERY-STATUS]</dt><dd><a href="https://www.w3.org/TR/battery-status/"><cite>Battery Status API</cite></a>. Anssi Kostiainen; Mounir Lamouri. W3C. 7 July 2016. W3C Candidate Recommendation. URL: <a href="https://www.w3.org/TR/battery-status/">https://www.w3.org/TR/battery-status/</a></dd><dt id="bib-beauty-beast">[BEAUTY-BEAST]</dt><dd><a href="https://hal.inria.fr/hal-01285470v2/"><cite>Beauty and the Beast: Diverting modern web browsers to build unique browser fingerprints</cite></a>. Pierre Laperdrix; Walter Rudametkin; Benoit Baudry. IEEE Symposium on Security and Privacy (S&amp;P 2016). May 2016. URL: <a href="https://hal.inria.fr/hal-01285470v2/">https://hal.inria.fr/hal-01285470v2/</a></dd><dt id="bib-dap-privacy-reqs">[dap-privacy-reqs]</dt><dd><a href="https://www.w3.org/TR/dap-privacy-reqs/"><cite>Device API Privacy Requirements</cite></a>. Alissa Cooper; Frederick Hirsch; John Morris. W3C. 29 June 2010. W3C Note. URL: <a href="https://www.w3.org/TR/dap-privacy-reqs/">https://www.w3.org/TR/dap-privacy-reqs/</a></dd><dt id="bib-evercookie">[EVERCOOKIE]</dt><dd><a href="https://samy.pl/evercookie/"><cite>evercookie - virtually irrevocable persistent cookies</cite></a>. Samy Kamkar.September 2010. URL: <a href="https://samy.pl/evercookie/">https://samy.pl/evercookie/</a></dd><dt id="bib-flashcookies">[FLASHCOOKIES]</dt><dd><a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1446862"><cite>Flash Cookies and Privacy</cite></a>. Ashkan Soltani; Shannon Canty; Quentin Mayo; Lauren Thomas; Chris Jay Hoofnagle.10 August 2009. URL: <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1446862">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1446862</a></dd><dt id="bib-flashcookies-2">[FLASHCOOKIES-2]</dt><dd><a href="https://ptolemy.berkeley.edu/projects/truststc/education/reu/11/Posters/AyensonMWambachDpaper.pdf"><cite>Flash cookies and privacy II: Now with HTML5 and ETag respawning</cite></a>. Mika Ayenson; Dietrich Wambach; Ashkan Soltani; Nathan Good; Chris Hoofnagle.URL: <a href="https://ptolemy.berkeley.edu/projects/truststc/education/reu/11/Posters/AyensonMWambachDpaper.pdf">https://ptolemy.berkeley.edu/projects/truststc/education/reu/11/Posters/AyensonMWambachDpaper.pdf</a></dd><dt id="bib-generic-sensor">[generic-sensor]</dt><dd><a href="https://www.w3.org/TR/generic-sensor/"><cite>Generic Sensor API</cite></a>. Mikhail Pozdnyakov; Alexander Shalamov; Tobie Langel. W3C. 7 March 2019. W3C Working Draft. URL: <a href="https://www.w3.org/TR/generic-sensor/">https://www.w3.org/TR/generic-sensor/</a></dd><dt id="bib-hiding-crowd">[HIDING-CROWD]</dt><dd><a href="https://hal.inria.fr/hal-01718234v2"><cite>Hiding in the Crowd: an Analysis of the Effectiveness of Browser Fingerprinting at Large Scale</cite></a>. Alejandro Gómez-Boix; Pierre Laperdrix; Benoit Baudry. WWW2018 - TheWebConf2018: 27th International World Wide Web Conference. April 2018. URL: <a href="https://hal.inria.fr/hal-01718234v2">https://hal.inria.fr/hal-01718234v2</a></dd><dt id="bib-html52">[html52]</dt><dd><a href="https://www.w3.org/TR/html52/"><cite>HTML 5.2</cite></a>. Steve Faulkner; Arron Eicholz; Travis Leithead; Alex Danilo; Sangwhan Moon. W3C. 14 December 2017. W3C Recommendation. URL: <a href="https://www.w3.org/TR/html52/">https://www.w3.org/TR/html52/</a></dd><dt id="bib-httpbis-client-hints">[httpbis-client-hints]</dt><dd><a href="https://httpwg.org/http-extensions/client-hints.html"><cite>HTTP Client Hints</cite></a>. Ilya Grigorik. HTTP Working Group. January 2019. URL: <a href="https://httpwg.org/http-extensions/client-hints.html">https://httpwg.org/http-extensions/client-hints.html</a></dd><dt id="bib-leaking-battery">[LEAKING-BATTERY]</dt><dd><a href="https://eprint.iacr.org/2015/616.pdf"><cite>The leaking battery: A privacy analysis of the HTML5 Battery Status API</cite></a>. Łukasz Olejnik; Gunes Acar; Claude Castelluccia; Claudia Diaz.2015. URL: <a href="https://eprint.iacr.org/2015/616.pdf">https://eprint.iacr.org/2015/616.pdf</a></dd><dt id="bib-mediacapture-streams">[mediacapture-streams]</dt><dd><a href="https://www.w3.org/TR/mediacapture-streams/"><cite>Media Capture and Streams</cite></a>. Daniel Burnett; Adam Bergkvist; Cullen Jennings; Anant Narayanan; Bernard Aboba. W3C. 3 October 2017. W3C Candidate Recommendation. URL: <a href="https://www.w3.org/TR/mediacapture-streams/">https://www.w3.org/TR/mediacapture-streams/</a></dd><dt id="bib-ndss-fingerprinting">[NDSS-FINGERPRINTING]</dt><dd><a href="https://www.microsoft.com/en-us/research/publication/host-fingerprinting-and-tracking-on-the-webprivacy-and-security-implications/"><cite>Host Fingerprinting and Tracking on the Web: Privacy and Security Implications</cite></a>. Ting-Fang Yen; Yinglian Xie; Fang Yu; Roger Peng Yu; Martin Abadi. In Proceedings of the Network and Distributed System Security Symposium (NDSS). February 2012. URL: <a href="https://www.microsoft.com/en-us/research/publication/host-fingerprinting-and-tracking-on-the-webprivacy-and-security-implications/">https://www.microsoft.com/en-us/research/publication/host-fingerprinting-and-tracking-on-the-webprivacy-and-security-implications/</a></dd><dt id="bib-proximity">[PROXIMITY]</dt><dd><a href="https://www.w3.org/TR/proximity/"><cite>Proximity Sensor</cite></a>. Anssi Kostiainen; Rijubrata Bhaumik. W3C. 5 March 2019. W3C Working Draft. URL: <a href="https://www.w3.org/TR/proximity/">https://www.w3.org/TR/proximity/</a></dd><dt id="bib-rfc6265">[RFC6265]</dt><dd><a href="https://tools.ietf.org/html/rfc6265"><cite>HTTP State Management Mechanism</cite></a>. A. Barth. IETF. April 2011. Proposed Standard. URL: <a href="https://tools.ietf.org/html/rfc6265">https://tools.ietf.org/html/rfc6265</a></dd><dt id="bib-rfc6454">[RFC6454]</dt><dd><a href="https://tools.ietf.org/html/rfc6454"><cite>The Web Origin Concept</cite></a>. A. Barth. IETF. December 2011. Proposed Standard. URL: <a href="https://tools.ietf.org/html/rfc6454">https://tools.ietf.org/html/rfc6454</a></dd><dt id="bib-rfc6973">[RFC6973]</dt><dd><a href="https://www.rfc-editor.org/rfc/rfc6973.txt"><cite>Privacy Considerations for Internet Protocols</cite></a>. A. Cooper; H. Tschofenig; B. Aboba; J. Peterson; J. Morris; M. Hansen; R. Smith. IETF. July 2013. RFC. URL: <a href="https://www.rfc-editor.org/rfc/rfc6973.txt">https://www.rfc-editor.org/rfc/rfc6973.txt</a></dd><dt id="bib-rfc7231">[RFC7231]</dt><dd><a href="https://tools.ietf.org/html/rfc7231"><cite>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</cite></a>. R. Fielding, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: <a href="https://tools.ietf.org/html/rfc7231">https://tools.ietf.org/html/rfc7231</a></dd><dt id="bib-security-privacy-questionnaire-tag">[security-privacy-questionnaire-tag]</dt><dd><a href="https://w3ctag.github.io/security-questionnaire/"><cite>Self-Review Questionnaire: Security and Privacy</cite></a>. Lukasz Olejnik; Jason Novak. W3C Technical Architecture Group. December 2018. URL: <a href="https://w3ctag.github.io/security-questionnaire/">https://w3ctag.github.io/security-questionnaire/</a></dd><dt id="bib-tag-minimization">[TAG-MINIMIZATION]</dt><dd><a href="https://www.w3.org/2001/tag/doc/APIMinimization"><cite>Data Minimization in Web APIs</cite></a>. Daniel Appelquist. W3C Technical Architecture Group. 12 September 2011. URL: <a href="https://www.w3.org/2001/tag/doc/APIMinimization">https://www.w3.org/2001/tag/doc/APIMinimization</a></dd><dt id="bib-tag-unsanctioned">[TAG-UNSANCTIONED]</dt><dd><a href="https://w3ctag.github.io/unsanctioned-tracking/"><cite>Unsanctioned Web Tracking</cite></a>. Mark Nottingham. W3C Technical Architecture Group. 17 July 2015. URL: <a href="https://w3ctag.github.io/unsanctioned-tracking/">https://w3ctag.github.io/unsanctioned-tracking/</a></dd><dt id="bib-tor-design">[TOR-DESIGN]</dt><dd><a href="https://www.torproject.org/projects/torbrowser/design/"><cite>The Design and Implementation of the Tor Browser</cite></a>. Mike Perry; Erinn Clark; Steven Murdoch; Georg Koppen.15 June 2018. URL: <a href="https://www.torproject.org/projects/torbrowser/design/">https://www.torproject.org/projects/torbrowser/design/</a></dd><dt id="bib-tracking-compliance">[TRACKING-COMPLIANCE]</dt><dd><a href="https://www.w3.org/TR/tracking-compliance/"><cite>Tracking Compliance and Scope</cite></a>. Nick Doty; Heather West; Justin Brookman; Sean Harvey; Erica Newland. W3C. 22 January 2019. W3C Note. URL: <a href="https://www.w3.org/TR/tracking-compliance/">https://www.w3.org/TR/tracking-compliance/</a></dd><dt id="bib-tracking-dnt">[TRACKING-DNT]</dt><dd><a href="https://www.w3.org/TR/tracking-dnt/"><cite>Tracking Preference Expression (DNT)</cite></a>. Roy Fielding; David Singer. W3C. 17 January 2019. W3C Note. URL: <a href="https://www.w3.org/TR/tracking-dnt/">https://www.w3.org/TR/tracking-dnt/</a></dd><dt id="bib-webstorage-user-tracking">[WEBSTORAGE-user-tracking]</dt><dd><a href="https://www.w3.org/TR/2013/REC-webstorage-20130730/#user-tracking"><cite>Web Storage &gt; Privacy &gt; User tracking</cite></a>. Ian Hickson. W3C. July 2013. Rec. URL: <a href="https://www.w3.org/TR/2013/REC-webstorage-20130730/#user-tracking">https://www.w3.org/TR/2013/REC-webstorage-20130730/#user-tracking</a></dd><dt id="bib-wpm-million">[WPM-MILLION]</dt><dd><a href="https://webtransparency.cs.princeton.edu/webcensus/"><cite>Online tracking: A 1-million-site measurement and analysis</cite></a>. Steven Englehardt; Arvind Narayanan.May 2016. URL: <a href="https://webtransparency.cs.princeton.edu/webcensus/">https://webtransparency.cs.princeton.edu/webcensus/</a></dd>
      </dl></section></section><p role="navigation" id="back-to-top"><a href="#title"><abbr title="Back to Top">↑</abbr></a></p><script src="https://www.w3.org/scripts/TR/2016/fixup.js"></script></body></html>
